{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","hooks/useLocalStorageReducer.js","hooks/useLocalStorageState.js","context/todos.context.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","console","log","value","setValue","e","target","reducer","action","type","id","v4","task","completed","filter","todo","map","newTask","useLocalStorageReducer","key","defaultVal","useReducer","val","JSON","parse","window","localStorage","getItem","dispatch","useEffect","setItem","stringify","useLocalStorageState","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todoReducer","todos","Provider","children","EditTodoForm","toggleEditForm","useContext","useInputState","handleChange","reset","style","width","marginLeft","onSubmit","preventDefault","TextField","autoFocus","margin","onChange","fullWidth","Todo","isEditing","ListItem","height","Checkbox","onClick","tabIndex","checked","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","memo","TodoList","length","Paper","List","i","Divider","TodoForm","padding","label","TodoApp","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","colors","Grid","container","justifyContent","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62d15af6.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useToggle(initialVal = false) {\r\n    const [state, setState] = useState(initialVal);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggle;","import { useState } from \"react\";\r\n\r\nexport default initialVal => {\r\n    console.log(initialVal);\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n    const reset = () => {\r\n        setValue(\"\");\r\n    };\r\n    return [value, handleChange, reset];\r\n}","import { v4 } from \"uuid\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: v4(), task: action.task, completed: false }]\r\n        case \"REMOVE\":\r\n            return [...state.filter(todo => todo.id !== action.id)];\r\n        case \"TOGGLE\":\r\n            return [...state.map(todo => (action.id === todo.id) ? { ...todo, completed: !todo.completed } : todo)]\r\n        case \"EDIT\":\r\n            return [...state.map(todo => (action.id === todo.id) ? { ...todo, task: action.newTask } : todo)]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import { useReducer, useEffect } from 'react';\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n    const [state, dispatch] = useReducer(reducer, defaultVal, (defaultVal) => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key))\r\n        } catch (e) {\r\n            val = defaultVal;\r\n        }\r\n\r\n        return val;\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state])\r\n\r\n    return [state, dispatch];\r\n}\r\n\r\nexport default useLocalStorageReducer;","import { useState, useEffect } from 'react';\r\n\r\nfunction useLocalStorageState(key, defaultVal) {\r\n    const [state, setState] = useState(() => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key)) || defaultVal;\r\n} catch (e) {\r\n    val = defaultVal;\r\n}\r\n\r\nreturn val;\r\n    })\r\nuseEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n}, [state])\r\n\r\nreturn [state, setState];\r\n}\r\n\r\nexport default useLocalStorageState;","import React, { createContext, useReducer } from 'react';\r\nimport todoReducer from '../reducers/todo.reducer';\r\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\r\nimport useLocalStorageState from '../hooks/useLocalStorageState';\r\n\r\nconst defaultTodos = [\r\n    {\r\n        id: 1, task: \"How the lawn using goats\", completed: false\r\n    },\r\n    {\r\n        id: 2, task: \"Release lady bugs into garden\", completed: true\r\n    }\r\n]\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", defaultTodos, todoReducer)\r\n    return (\r\n        <TodosContext.Provider value={todos}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </TodosContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nfunction EditTodoForm({ task, id, toggleEditForm }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const [value, handleChange, reset] = useInputState(task)\r\n    return (\r\n        <form style={{ width: '50%', marginLeft: '1rem' }} onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch({ type: \"EDIT\", id: id, newTask: value })\r\n            toggleEditForm();\r\n            reset();\r\n        }}>\r\n            <TextField autoFocus margin=\"normal\" value={value} onChange={handleChange} fullWidth />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditTodoForm;","import React, { useContext, memo } from 'react';\r\nimport { ListItem } from '@material-ui/core';\r\nimport { ListItemText } from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { ListItemSecondaryAction } from '@material-ui/core';\r\nimport useToggle from './hooks/useToggleState';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nfunction Todo({ id, task, completed }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const [isEditing, toggle] = useToggle(false);\r\n    return (\r\n        <ListItem style={{ height: '64px' }}>\r\n            {isEditing ? <EditTodoForm toggleEditForm={toggle} task={task} id={id} /> :\r\n                <>\r\n                    <Checkbox onClick={() => dispatch({ type: \"TOGGLE\", id: id })} tabIndex={-1} checked={completed} />\r\n                    <ListItemText style={{ textDecoration: completed ? 'line-through' : 'none' }}>\r\n                        {task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => dispatch({ type: \"REMOVE\", id: id })} aria-label=\"Delete\">\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={toggle} aria-label=\"Edit\">\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            }\r\n        </ListItem >\r\n    )\r\n}\r\n\r\nexport default memo(Todo);","import React, { useContext } from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { List } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport Todo from './Todo';\r\nimport { TodosContext } from './context/todos.context';\r\n\r\nfunction TodoList() {\r\n    const todos = useContext(TodosContext);\r\n    if (todos.length) {\r\n        return (\r\n            <Paper>\r\n                <List>\r\n                    {todos.map((todo, i) => (\r\n                        <>\r\n                            <Todo {...todo} />\r\n                            {i < todos.length - 1 && <Divider />}\r\n                        </>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default TodoList;","import React, { useContext } from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nfunction TodoForm() {\r\n    const dispatch = useContext(DispatchContext);\r\n    const [value, handleChange, reset] = useInputState(\"\");\r\n\r\n    return (\r\n        <Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                dispatch({ type: \"ADD\", task: value })\r\n                reset();\r\n            }}>\r\n                <TextField value={value} onChange={handleChange} margin=\"normal\" label=\"Add New Todo\" fullWidth />\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodosProvider } from \"./context/todos.context\";\r\n\r\nfunction TodoApp() {\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: 0,\r\n                margin: 0,\r\n                height: '100vh',\r\n                backgroundColor: '#fafafa'\r\n            }}\r\n            elevation={0}\r\n        >\r\n            <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n                <Toolbar>\r\n                    <Typography colors='inherit'>TODOS WITH HOOKS</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container justifyContent='center' style={{ marginTop: '1rem' }}>\r\n                <Grid item xs={11} md={8} lg={4}>\r\n                    <TodosProvider>\r\n                        <TodoForm />\r\n                        <TodoList />\r\n                    </TodosProvider>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default TodoApp;","import React from \"react\";\r\nimport './App.css';\r\nimport TodoApp from \"./TodoApp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoApp />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}